[gd_resource type="VisualShader" load_steps=19 format=3 uid="uid://b38bb6oo4aodn"]

[ext_resource type="Texture2D" uid="uid://7qppmqfjewnc" path="res://Materials/Ground/grass2K.jpg" id="1_svwoj"]
[ext_resource type="Texture2D" uid="uid://7rlxb4gas58h" path="res://Materials/Ground/rocky_trail_diff_2k.jpg" id="2_e356a"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_pcbti"]
output_port_for_preview = 0
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, 0.5]
op_type = 4

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_mpstj"]
default_input_values = [0, 0.0, 1, 0.7, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_dsy06"]
default_input_values = [0, 0.0, 1, 0.7]
operator = 1

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_2ix4y"]
parameter_name = "FloatParameter"
hint = 2
min = 0.7
max = 0.95
step = 0.001
default_value_enabled = true
default_value = 0.8

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_a203b"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_axpf3"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1024, 1024, 1024)]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_famrt"]
texture = ExtResource("1_svwoj")
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_elj37"]
texture = ExtResource("2_e356a")
texture_type = 1

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_nftdt"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1024, 1024, 1024)]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_o6bby"]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_dpmf1"]
input_name = "normal"

[sub_resource type="VisualShaderNodeVec3Constant" id="VisualShaderNodeVec3Constant_u8imc"]
constant = Vector3(0, 1, 0)

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_5vtmw"]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_cgdcs"]
default_input_values = [0, 0.0, 1, 0.95, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_48642"]
input_name = "view_matrix"

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_aq4as"]
operator = 1

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_frg_18 : source_color;
uniform float FloatParameter : hint_range(0.69999998807907, 0.94999998807907, 0.0010000000475) = 0.80000001192093;
uniform sampler2D tex_frg_19 : source_color;



void fragment() {
// Input:8
	mat4 n_out8p0 = VIEW_MATRIX;


// Input:4
	vec3 n_out4p0 = NORMAL;


// TransformVectorMult:9
	vec3 n_out9p0 = (vec4(n_out4p0, 1.0) * n_out8p0).xyz;


// Vector3Constant:5
	vec3 n_out5p0 = vec3(0.000000, 1.000000, 0.000000);


// DotProduct:6
	float n_out6p0 = dot(n_out9p0, n_out5p0);


// Input:16
	vec2 n_out16p0 = UV;


// VectorOp:17
	vec3 n_in17p1 = vec3(1024.00000, 1024.00000, 1024.00000);
	vec3 n_out17p0 = vec3(n_out16p0, 0.0) * n_in17p1;


// Texture2D:18
	vec4 n_out18p0 = texture(tex_frg_18, vec2(n_out17p0.xy));


// FloatParameter:14
	float n_out14p0 = FloatParameter;


// Input:21
	vec2 n_out21p0 = UV;


// VectorOp:20
	vec3 n_in20p1 = vec3(1024.00000, 1024.00000, 1024.00000);
	vec3 n_out20p0 = vec3(n_out21p0, 0.0) * n_in20p1;


// Texture2D:19
	vec4 n_out19p0 = texture(tex_frg_19, vec2(n_out20p0.xy));


// Mix:10
	vec3 n_out10p0 = mix(vec3(n_out19p0.xyz), vec3(n_out18p0.xyz), n_out6p0);


	vec3 n_out11p0;
// If:11
	float n_in11p2 = 0.00001;
	if(abs(n_out6p0 - n_out14p0) < n_in11p2)
	{
		n_out11p0 = n_out10p0;
	}
	else if(n_out6p0 < n_out14p0)
	{
		n_out11p0 = vec3(n_out19p0.xyz);
	}
	else
	{
		n_out11p0 = n_out10p0;
	}


	vec3 n_out7p0;
// If:7
	float n_in7p1 = 0.95000;
	float n_in7p2 = 0.00001;
	if(abs(n_out6p0 - n_in7p1) < n_in7p2)
	{
		n_out7p0 = vec3(n_out18p0.xyz);
	}
	else if(n_out6p0 < n_in7p1)
	{
		n_out7p0 = n_out11p0;
	}
	else
	{
		n_out7p0 = vec3(n_out18p0.xyz);
	}


// Output:0
	ALBEDO = n_out7p0;


}
"
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_dpmf1")
nodes/fragment/4/position = Vector2(-1640, 140)
nodes/fragment/5/node = SubResource("VisualShaderNodeVec3Constant_u8imc")
nodes/fragment/5/position = Vector2(-1480, 260)
nodes/fragment/6/node = SubResource("VisualShaderNodeDotProduct_5vtmw")
nodes/fragment/6/position = Vector2(-1100, 180)
nodes/fragment/7/node = SubResource("VisualShaderNodeIf_cgdcs")
nodes/fragment/7/position = Vector2(-200, 240)
nodes/fragment/8/node = SubResource("VisualShaderNodeInput_48642")
nodes/fragment/8/position = Vector2(-1620, 40)
nodes/fragment/9/node = SubResource("VisualShaderNodeTransformVecMult_aq4as")
nodes/fragment/9/position = Vector2(-1320, 60)
nodes/fragment/10/node = SubResource("VisualShaderNodeMix_pcbti")
nodes/fragment/10/position = Vector2(-880, 380)
nodes/fragment/11/node = SubResource("VisualShaderNodeIf_mpstj")
nodes/fragment/11/position = Vector2(-620, 280)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatOp_dsy06")
nodes/fragment/12/position = Vector2(-1100, 300)
nodes/fragment/14/node = SubResource("VisualShaderNodeFloatParameter_2ix4y")
nodes/fragment/14/position = Vector2(-1560, 400)
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_a203b")
nodes/fragment/16/position = Vector2(-1620, 840)
nodes/fragment/17/node = SubResource("VisualShaderNodeVectorOp_axpf3")
nodes/fragment/17/position = Vector2(-1320, 780)
nodes/fragment/18/node = SubResource("VisualShaderNodeTexture_famrt")
nodes/fragment/18/position = Vector2(-1120, 700)
nodes/fragment/19/node = SubResource("VisualShaderNodeTexture_elj37")
nodes/fragment/19/position = Vector2(-1120, 940)
nodes/fragment/20/node = SubResource("VisualShaderNodeVectorOp_nftdt")
nodes/fragment/20/position = Vector2(-1320, 1020)
nodes/fragment/21/node = SubResource("VisualShaderNodeInput_o6bby")
nodes/fragment/21/position = Vector2(-1620, 1080)
nodes/fragment/connections = PackedInt32Array(5, 0, 6, 1, 6, 0, 7, 0, 7, 0, 0, 0, 8, 0, 9, 0, 4, 0, 9, 1, 9, 0, 6, 0, 11, 0, 7, 5, 6, 0, 11, 0, 6, 0, 12, 0, 10, 0, 11, 3, 10, 0, 11, 4, 14, 0, 11, 1, 6, 0, 10, 2, 16, 0, 17, 0, 17, 0, 18, 0, 18, 0, 10, 1, 18, 0, 7, 4, 18, 0, 7, 3, 21, 0, 20, 0, 20, 0, 19, 0, 19, 0, 10, 0, 19, 0, 11, 5)
